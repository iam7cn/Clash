#---------------------------------------------------#
## 配置文件需要放置在 $HOME/.config/clash/config.yaml
##
## 如果您不知道如何操作，请参阅 SS-Rule-Snippet 的 Wiki：
## https://github.com/Hackl0us/SS-Rule-Snippet/wiki/clash(X)

## 关于 Clash Premium 的额外功能，请参考官方文档：
## https://github.com/Dreamacro/clash/wiki/Premium-Core-Features
#---------------------------------------------------#

# HTTP 代理端口
port: 7890

# SOCKS5 代理端口
socks-port: 7891

# Linux 和 macOS 的 redir 透明代理端口 (重定向 TCP 和 TProxy UDP 流量)
# redir-port: 7892

# Linux 的透明代理端口（适用于 TProxy TCP 和 TProxy UDP 流量)
# tproxy-port: 7893

# 本地 SOCKS5/HTTP(S) 服务验证
# authentication:
#  - "user1:pass1"
#  - "user2:pass2"

# 允许局域网的连接（可用来共享代理）
allow-lan: true
bind-address: "*"
# 此功能仅在 allow-lan 设置为 true 时生效，支持三种参数：
# "*"                           绑定所有的 IP 地址
# 192.168.1.11                  绑定一个的 IPv4 地址
# "[aaaa::a8aa:ff:fe09:57d8]"   绑定一个 IPv6 地址

# Clash 路由工作模式
# 规则模式：rule（规则） / global（全局代理）/ direct（全局直连）
mode: Rule

# Clash 默认将日志输出至 STDOUT
# 设置日志输出级别 (默认级别：silent，即不输出任何内容，以避免因日志内容过大而导致程序内存溢出）。
# 5 个级别：silent / info / warning / error / debug。级别越高日志输出量越大，越倾向于调试，若需要请自行开启。
log-level: info

# clash 的 RESTful API 监听地址
external-controller: 127.0.0.1:9090

# 存放配置文件的相对路径，或存放网页静态资源的绝对路径
# Clash core 将会将其部署在 http://{{external-controller}}/ui
# external-ui: folder

# RESTful API 的口令 (可选)
# 通过 HTTP 头中 Authorization: Bearer ${secret} 参数来验证口令
# 当 RESTful API 的监听地址为 0.0.0.0 时，请务必设定口令以保证安全
# secret: ""

# 出站网卡接口
# interface-name: en0

# DNS 服务器和建立连接时的 静态 Hosts, 仅在 dns.enhanced-mode 模式为 redir-host 生效
# 支持通配符域名 (例如: *.clash.dev, *.foo.*.example.com )
# 不使用通配符的域名优先级高于使用通配符的域名 (例如: foo.example.com > *.example.com > .example.com )
# 注意: +.foo.com 的效果等同于 .foo.com 和 foo.com
hosts:
# '*.clash.dev': 127.0.0.1
# '.dev': 127.0.0.1
# 'alpha.clash.dev': '::1'
  'xiao7.cc': '192.168.70.16'  

# DNS 服务器配置(可选；若不配置，程序内置的 DNS 服务会被关闭)
dns:
  enable: false
  listen: 0.0.0.0:53
  ipv6: false   # true 当此选项为 false 时, AAAA 请求将返回空

  # 以下填写的 DNS 服务器将会被用来解析 DNS 服务的域名
  # 仅填写 DNS 服务器的 IP 地址
  default-nameserver:
    - 223.5.5.5
    - 114.114.114.114
  enhanced-mode: fake-ip # 或 redir-host
  fake-ip-range: 198.18.70.1/16 # Fake IP 地址池 (CIDR 形式)
  # use-hosts: true # 查询 hosts 并返回 IP 记录

  # 在以下列表的域名将不会被解析为 fake ip，这些域名相关的解析请求将会返回它们真实的 IP 地址
  fake-ip-filter:
    # 以下域名列表参考自 vernesong/OpenClash 项目，并由 Hackl0us 整理补充
    # === LAN ===
    - '*.lan'
    # === Linksys Wireless Router ===
    - '*.linksys.com'
    - '*.linksyssmartwifi.com'
    # === Apple Software Update Service ===
    - 'swscan.apple.com'
    - 'mesu.apple.com'
    # === Windows 10 Connnect Detection ===
    - '*.msftconnecttest.com'
    - '*.msftncsi.com'
    # === NTP Service ===
    - 'time.*.com'
    - 'time.*.gov'
    - 'time.*.edu.cn'
    - 'time.*.apple.com'

    - 'time1.*.com'
    - 'time2.*.com'
    - 'time3.*.com'
    - 'time4.*.com'
    - 'time5.*.com'
    - 'time6.*.com'
    - 'time7.*.com'

    - 'ntp.*.com'
    - 'ntp.*.com'
    - 'ntp1.*.com'
    - 'ntp2.*.com'
    - 'ntp3.*.com'
    - 'ntp4.*.com'
    - 'ntp5.*.com'
    - 'ntp6.*.com'
    - 'ntp7.*.com'

    - '*.time.edu.cn'
    - '*.ntp.org.cn'
    - '+.pool.ntp.org'

    - 'time1.cloud.tencent.com'
    # === Music Service ===
    ## NetEase
    - '+.music.163.com'
    - '*.126.net'
    ## Baidu
    - 'musicapi.taihe.com'
    - 'music.taihe.com'
    ## Kugou
    - 'songsearch.kugou.com'
    - 'trackercdn.kugou.com'
    ## Kuwo
    - '*.kuwo.cn'
    ## JOOX
    - 'api-jooxtt.sanook.com'
    - 'api.joox.com'
    - 'joox.com'
    ## QQ
    - '+.y.qq.com'
    - '+.music.tc.qq.com'
    - 'aqqmusic.tc.qq.com'
    - '+.stream.qqmusic.qq.com'
    ## Xiami
    - '*.xiami.com'
    ## Migu
    - '+.music.migu.cn'
    # === Game Service ===
    ## Nintendo Switch
    - '+.srv.nintendo.net'
    ## Sony PlayStation
    - '+.stun.playstation.net'
    ## Microsoft Xbox
    - 'xbox.*.microsoft.com'
    - '+.xboxlive.com'
    # === Other ===
    ## QQ Quick Login
    - 'localhost.ptlogin2.qq.com'
    ## Golang
    - 'proxy.golang.org'
    ## STUN Server
    - 'stun.*.*'
    - 'stun.*.*.*'

  # 支持 UDP / TCP / DoT / DoH 协议的 DNS 服务，可以指明具体的连接端口号。
  # 所有 DNS 请求将会直接发送到服务器，不经过任何代理。
  # Clash 会使用最先获得的解析记录回复 DNS 请求
  nameserver:
    - https://doh.pub/dns-query
    - https://dns.alidns.com/dns-query

  # 当 fallback 参数被配置时, DNS 请求将同时发送至上方 nameserver 列表和下方 fallback 列表中配置的所有 DNS 服务器.
  # 当解析得到的 IP 地址的地理位置不是 CN 时，clash 将会选用 fallback 中 DNS 服务器的解析结果。
  # fallback:
  #   - https://dns.google/dns-query

  # 如果使用 nameserver 列表中的服务器解析的 IP 地址在下方列表中的子网中，则它们被认为是无效的，
  # Clash 会选用 fallback 列表中配置 DNS 服务器解析得到的结果。
  #
  # 当 fallback-filter.geoip 为 true 且 IP 地址的地理位置为 CN 时，
  # Clash 会选用 nameserver 列表中配置 DNS 服务器解析得到的结果。
  #
  # 当 fallback-filter.geoip 为 false, 如果解析结果不在 fallback-filter.ipcidr 范围内，
  # Clash 总会选用 nameserver 列表中配置 DNS 服务器解析得到的结果。
  #
  # 采取以上逻辑进行域名解析是为了对抗 DNS 投毒攻击。
  fallback-filter:
    geoip: false
    ipcidr:
      - 240.0.0.0/4
      - 0.0.0.0/32
    # domain:
    #   - '+.google.com'
    #   - '+.facebook.com'
    #   - '+.youtube.com'

tun:
  enable: false #如果需要启用 TUN 模式，请设置为 true
  stack: system # 或 gvisor
  macOS-auto-route: true
  macOS-auto-detect-interface: true
  dns-hijack:
    - tcp://8.8.8.8:53
    - tcp://8.8.4.4:53
    
proxies:
  # shadowsocks
  # 支持加密方式：
  #   aes-128-gcm aes-192-gcm aes-256-gcm
  #   aes-128-cfb aes-192-cfb aes-256-cfb
  #   aes-128-ctr aes-192-ctr aes-256-ctr
  #   rc4-md5 chacha20 chacha20-ietf xchacha20
  #   chacha20-ietf-poly1305 xchacha20-ietf-poly1305
  # - {"name":"🇨🇳 CN_001","server":"192.168.1.1","type":"ss","country":"🇨🇳 CN","port":443,"password":"iam7.cn","cipher":"aes-128-gcm","plugin":"obfs","plugin-opts":{"host":"www.iam7.cn","mode":"tls"}}   
  # ShadowsocksR
  # 支持的加密方式: SS 中支持的所有流加密方式
  # 支持的混淆方式:
  #   plain http_simple http_post
  #   random_head tls1.2_ticket_auth tls1.2_ticket_fastauth
  # 支持的协议:
  #   origin auth_sha1_v4 auth_aes128_md5
  #   auth_aes128_sha1 auth_chain_a auth_chain_b
  # - {"name":"🇨🇳 CN_002","server":"192.168.1.1","type":"ssr","country":"🇨🇳 CN","port":443,"password":"iam7.cn","cipher":"rc4-md5","protocol":"origin","protocol-param":"www.iam7.cn","obfs":"plain","obfs-param":"www.iam7.cn"}
  # vmess
  # 支持加密方式：auto / aes-128-gcm / chacha20-poly1305 / none
  # - {"name":"🇨🇳 CN_003","server":"192.168.1.1","type":"vmess","country":"🇨🇳 CN","port":443,"uuid":"171dfc35-b570-372c-b3e1-77b712cd3fc5","alterId":2,"cipher":"auto","network":"ws","ws-path":"/jdy","servername":"www.iam7.cn","ws-headers":{"HOST":"www.iam7.cn"},"http-opts":{},"h2-opts":{},"skip-cert-verify":true}
  # socks5
  # - {"name":"🇨🇳 CN_004","server":"192.168.1.1","type":"socks5","country":"🇨🇳 CN","port":443,"username":"xiao7","password":iam7.cn,"tls":true,"skip-cert-verify":true,"udp":true}
  # http "tls":true,为https
  # - {"name":"🇨🇳 CN_005","server":"192.168.1.1","type":"http","country":"🇨🇳 CN","port":443,"username":"xiao7","password":iam7.cn,"tls":true,"skip-cert-verify":true,"udp":true}
  # snell (注意：暂时不支持 UDP 转发)
  # - {"name":"🇨🇳 CN_006","server":"192.168.1.1","type":"snell","country":"🇨🇳 CN","port":443,"psk":iam7.cn,"mode":http,"version":2}
  # Trojan
  # - {"name":"🇨🇳 CN_007","server":"192.168.1.1","type":"trojan","country":"🇨🇳 CN","port":443,"password":"iam7.cn","skip-cert-verify":true,"udp":true}
   
proxy-groups:
  # 代理的转发链, 在 proxies 中不应该包含 relay. 不支持 UDP.
  # 流量: clash <-> http <-> vmess <-> ss1 <-> ss2 <-> 互联网
  # url-test 可以自动选择与指定 URL 测速后，延迟最短的服务器
  # fallback 可以尽量按照用户书写的服务器顺序，在确保服务器可用的情况下，自动选择服务器
  # load-balance 可以使相同 eTLD 请求在同一条代理线路上
  # select 用来允许用户手动选择 代理服务器 或 服务器组
  # 您也可以使用 RESTful API 去切换服务器，这种方式推荐在 GUI 中使用  
  - name: 🚀 节点选择
    type: select
    proxies:
      - ♻️ 自动选择      
      - 👉 手动切换
      - 负载均衡
      - DIRECT
  - name: ♻️ 自动选择
    type: url-test
    url: http://www.gstatic.com/generate_204
    interval: 300
    proxies:
      - 🇨🇳 小柒节点
  - name: 负载均衡
    type: load-balance
    proxies:
      - 🇨🇳 小柒节点      
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
  - name: 👉 手动切换
    type: select
    use:
      - xiao7    
  - name: 🎯 全球直连
    type: select
    proxies:
      - DIRECT
      - 🚀 节点选择
      - ♻️ 自动选择
  - name: 🛑 全球拦截
    type: select
    proxies:
      - REJECT
      - DIRECT
  - name: 🐟 漏网之鱼
    type: select
    proxies:
      - 🇨🇳 小柒节点
      
  - name: 🇨🇳 小柒节点
    type: url-test
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
    use:
      - xiao7
      
proxy-providers:
  xiao7:
    type: http
    url: "https://cdn.jsdelivr.net/gh/iam7cn/Clash@main/Profiles/sub.list"
    interval: 3600
    path: xiao7/xiao7.yaml
    health-check:
      enable: true
      interval: 600
      url: http://www.gstatic.com/generate_204
# 关于 Rule Provider 请查阅：https://lancellc.gitbook.io/clash/clash-config-file/rule-provider     
rule-providers:
#   name: # Provider 名称
#   type: http # http 或 file
#   behavior: classical # 或 ipcidr、domain
#   url: # 只有当类型为 HTTP 时才可用，您不需要在本地空间中创建新文件。
#   path: # 文件路径
#   interval: # 自动更新间隔单位秒，仅在类型为 HTTP 时可用 
  Reject: # 屏蔽网址
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/iam7cn/Clash@main/clash-rules/Reject.list"
    path: ./ruleset/reject.yaml
    interval: 3600

  Icloud: # icloud网址
    type: http  
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/iam7cn/Clash@main/clash-rules/Icloud.list"
    path: ./ruleset/icloud.yaml
    interval: 3600

  Apple: # apple网址
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/iam7cn/Clash@main/clash-rules/Apple.list"
    path: ./ruleset/apple.yaml
    interval: 3600

  Google: # google网址
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/iam7cn/Clash@main/clash-rules/Google.list"
    path: ./ruleset/google.yaml
    interval: 3600

  Proxy: # 代理网址
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/iam7cn/Clash@main/clash-rules/Proxy.list"
    path: ./ruleset/proxy.yaml
    interval: 3600

  Direct: # 直连网址
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/iam7cn/Clash@main/clash-rules/Direct.list"
    path: ./ruleset/direct.yaml
    interval: 3600

  Private: # 自定义代理网址
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/iam7cn/Clash@main/clash-rules/Private.list"
    path: ./ruleset/private.yaml
    interval: 3600

  GFW: # GFW网址
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/iam7cn/Clash@main/clash-rules/GFW.list"
    path: ./ruleset/gfw.yaml
    interval: 3600

  Greatfire: # GFW网址
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/iam7cn/Clash@main/clash-rules/Greatfire.list"
    path: ./ruleset/greatfire.yaml
    interval: 3600

  Tld-not-cn: # 非CN网址
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/iam7cn/Clash@main/clash-rules/Tld-not-cn.list"
    path: ./ruleset/tld-not-cn.yaml
    interval: 3600

  Telegramcidr: # TG IP地址
    type: http
    behavior: ipcidr
    url: "https://cdn.jsdelivr.net/gh/iam7cn/Clash@main/clash-rules/Telegramcidr.list"
    path: ./ruleset/telegramcidr.yaml
    interval: 3600

  CNcidr: # china-ip地址
    type: http
    behavior: ipcidr
    url: "https://cdn.jsdelivr.net/gh/iam7cn/Clash@main/clash-rules/CNcidr.list"
    path: ./ruleset/cncidr.yaml
    interval: 3600

  Lancidr: # 内网IP地址
    type: http
    behavior: ipcidr
    url: "https://cdn.jsdelivr.net/gh/iam7cn/Clash@main/clash-rules/Lancidr.list"
    path: ./ruleset/lancidr.yaml
    interval: 3600  

  BanAD: # 广告拦截
    type: http
    behavior: classical # domain, ipcidr or classical (premium core only)
    url: "https://cdn.jsdelivr.net/gh/iam7cn/Clash@main/clash-rules/BanAD.list"
    path: ./ruleset/BanAD.yaml
    interval: 3600
    
rules:
  # 自定义规则
  ## 您可以在此处插入您补充的自定义规则（请注意保持缩进）
  #DOMAIN-SUFFIX：域名后缀匹配
  #DOMAIN：域名匹配
  #DOMAIN-KEYWORD：域名关键字匹配
  #IP-CIDR：IP 段匹配
  #SRC-IP-CIDR：源 IP 段匹配
  #GEOIP：GEOIP 数据库（国家代码）匹配
  #DST-PORT：目标端口匹配
  #SRC-PORT：源端口匹配
  #PROCESS-NAME：源进程名匹配
  #RULE-SET：Rule Provider 规则匹配
  #MATCH：全匹配
  - PROCESS-NAME,v2ray,DIRECT
  - PROCESS-NAME,xray,DIRECT
  - PROCESS-NAME,naive,DIRECT
  - PROCESS-NAME,trojan,DIRECT
  - PROCESS-NAME,trojan-go,DIRECT
  - PROCESS-NAME,ss-local,DIRECT
  - PROCESS-NAME,privoxy,DIRECT
  - PROCESS-NAME,leaf,DIRECT
  - PROCESS-NAME,v2ray.exe,DIRECT
  - PROCESS-NAME,xray.exe,DIRECT
  - PROCESS-NAME,naive.exe,DIRECT
  - PROCESS-NAME,trojan.exe,DIRECT
  - PROCESS-NAME,trojan-go.exe,DIRECT
  - PROCESS-NAME,ss-local.exe,DIRECT
  - PROCESS-NAME,privoxy.exe,DIRECT
  - PROCESS-NAME,leaf.exe,DIRECT
  - PROCESS-NAME,Surge,DIRECT
  - PROCESS-NAME,Surge 2,DIRECT
  - PROCESS-NAME,Surge 3,DIRECT
  - PROCESS-NAME,Surge 4,DIRECT
  - PROCESS-NAME,Surge%202,DIRECT
  - PROCESS-NAME,Surge%203,DIRECT
  - PROCESS-NAME,Surge%204,DIRECT
  - PROCESS-NAME,Thunder,DIRECT
  - PROCESS-NAME,DownloadService,DIRECT
  - PROCESS-NAME,qBittorrent,DIRECT
  - PROCESS-NAME,Transmission,DIRECT
  - PROCESS-NAME,fdm,DIRECT
  - PROCESS-NAME,aria2c,DIRECT
  - PROCESS-NAME,Folx,DIRECT
  - PROCESS-NAME,NetTransport,DIRECT
  - PROCESS-NAME,uTorrent,DIRECT
  - PROCESS-NAME,WebTorrent,DIRECT
  - PROCESS-NAME,aria2c.exe,DIRECT
  - PROCESS-NAME,BitComet.exe,DIRECT
  - PROCESS-NAME,fdm.exe,DIRECT
  - PROCESS-NAME,NetTransport.exe,DIRECT
  - PROCESS-NAME,qbittorrent.exe,DIRECT
  - PROCESS-NAME,Thunder.exe,DIRECT
  - PROCESS-NAME,ThunderVIP.exe,DIRECT
  - PROCESS-NAME,transmission-daemon.exe,DIRECT
  - PROCESS-NAME,transmission-qt.exe,DIRECT
  - PROCESS-NAME,uTorrent.exe,DIRECT
  - PROCESS-NAME,WebTorrent.exe,DIRECT
  - DOMAIN,clash.razord.top,DIRECT
  - DOMAIN,yacd.haishan.me,DIRECT
  - RULE-SET,Private,DIRECT
  - RULE-SET,Reject,REJECT
  - RULE-SET,Icloud,DIRECT
  - RULE-SET,Apple,DIRECT
  - RULE-SET,Google,DIRECT
  - RULE-SET,Proxy,PROXY
  - RULE-SET,Direct,DIRECT
  - RULE-SET,Telegramcidr,PROXY
  - RULE-SET,BanAD,REJECT
  - GEOIP,,DIRECT
  - GEOIP,CN,DIRECT
  - MATCH,PROXY #PROXY 白名单模式（推荐）或DIRECT 黑名单模式
